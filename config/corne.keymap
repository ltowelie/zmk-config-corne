/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&kscan0 {
    debounce-press-ms = <7>;
    debounce-release-ms = <7>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <20>;
            key-positions = <18 19>;
            bindings = <&kp ESC>;
        };

        CapsLock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 17>;
            timeout-ms = <20>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        locking_all: locking_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &kt LEFT_WIN &kp Z &kt LEFT_WIN &bt BT_SEL 2 &kt LEFT_WIN &kp Z &kt LEFT_WIN>;
            label = "LOCKING_ALL";
        };

        sw_bluetooth_logi_host_2: switch_bluetooth_and_logi_host {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kt LEFT_GUI &kp NUMBER_2 &kt LGUI &kt LALT &bt BT_SEL 1>;
            label = "SWITCH_BLUETOOTH_AND_LOGI_HOST";
        };

        sw_bluetooth_logi_host_3: sw_bluetooth_logi_host_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kt LEFT_GUI &kp NUMBER_3 &kt LGUI &kt LALT &bt BT_SEL 2>;
            label = "SW_BLUETOOTH_LOGI_HOST_3";
        };

        sw_bluetooth_logi_host_4: sw_bluetooth_logi_host_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kt LEFT_GUI &kp NUMBER_4 &kt LGUI &kt LALT &bt BT_SEL 3>;
            label = "SW_BLUETOOTH_LOGI_HOST_4";
        };

        sw_bluetooth_logi_host_5: sw_bluetooth_logi_host_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kt LEFT_GUI &kp NUMBER_5 &kt LGUI &kt LALT &bt BT_SEL 4>;
            label = "SW_BLUETOOTH_LOGI_HOST_5";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P          &kp LEFT_BRACKET
&sk LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMICOLON  &kp SQT
&sk LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp ESC
                              &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &sk RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp N1  &kp N2  &kp N3    &kp N4  &kp N5           &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp LEFT_SHIFT  &trans  &trans  &trans    &trans  &trans           &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp DEL
&kp LCTRL       &none   &trans  &trans    &trans  &kp BACKSPACE    &kp DEL   &trans    &trans    &trans     &trans  &trans
                                &kp LGUI  &trans  &kp SPACE        &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LEFT_SHIFT  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5             &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL       &kp F6    &kp F7  &kp F8    &kp F9    &kp PRINTSCREEN    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                  &kp LGUI  &trans    &kp SPACE          &kp RET    &trans     &kp RALT
            >;
        };

        service {
            bindings = <
&trans      &trans        &trans                     &trans                     &sys_reset                 &kp C_VOLUME_UP              &out OUT_BLE  &out OUT_TOG   &out OUT_USB  &studio_unlock  &trans           &trans
&bt BT_CLR  &bt BT_SEL 0  &sw_bluetooth_logi_host_2  &sw_bluetooth_logi_host_3  &sw_bluetooth_logi_host_4  &sw_bluetooth_logi_host_5    &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP   &kp END         &kp PAUSE_BREAK  &trans
&trans      &locking_all  &trans                     &trans                     &trans                     &kp C_VOLUME_DOWN            &kp F9        &kp F10        &kp F11       &kp F12         &trans           &trans
                                                     &trans                     &trans                     &trans                       &trans        &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        service_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
